on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the Git repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Cache Python environment
      uses: actions/cache@v3
      id: cache-python
      with:
        path: .venv
        key: .venv-${{ hashFiles('requirements.txt') }}
    - name: Clear Apt cache of deb files
      run: |
        sudo apt-get update -yq
        sudo apt-get clean -yq
    - name: Cache deb files
      uses: actions/cache@v3
      with:
        path: /var/cache/apt/archives/*.deb
        key: deb-${{ hashFiles('/var/cache/apt/archives/*.deb') }}
        restore-keys: |
          deb-
    - name: Install base Apt packages
      id: cache-apt
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        execute_install_scripts: true
        packages: graphviz libgraphviz-dev librsvg2-bin pdf2svg
        version: 1.0
    - name: Install texlive Apt dependencies
      run: |
        sudo apt-get install -yq texlive-base texlive-latex-extra
    - name: Build website
      shell: bash
      run: |
        tree src/_static/images
        make prod
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: 'dist'

  deploy:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
